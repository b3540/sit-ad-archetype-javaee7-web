#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<project name="${artifactId}-distribution" basedir="." default="install">

  <property name="artifactId" value="${artifactId}"/>
  <property environment="env" />
  <property name="workdir" value="${symbol_dollar}{basedir}/../target/work" />
  <property name="resdir" value="${symbol_dollar}{basedir}/archetype/src" />
  <property name="testArtifactId" value="${artifactId}-test" />
  <property name="testdir" value="${symbol_dollar}{basedir}/target/${symbol_dollar}{testArtifactId}" />

  
  <!-- TODO else~を修正 -->
  <condition property="mvn.cmd" value="${symbol_dollar}{mvn.home}/bin/mvn.bat" else="/usr/local/bin/mvn">
    <os family="windows"/>
  </condition>

  
  <target name="install">
    <property name="mvn.phase" value="install"/>
    <property name="mvn.performRelease" value="false"/>
    <antcall target="process-all"/>
  </target>


  <target name="deploy">
    <property name="mvn.phase" value="deploy"/>
    <property name="mvn.performRelease" value="true"/>
    <antcall target="process-all"/>
  </target>


  <target name="process-all">
    <antcall target="01_copy-archetype-work"/>
    <antcall target="02_create-from-archetype"/>
    <antcall target="03_copy-archetype-resource"/>
    <antcall target="04_process-archetype"/>
    <antcall target="05_acceptance-test"/>
  </target>

  
  <target name="01_copy-archetype-work">

    <delete dir="${symbol_dollar}{workdir}" />

    <copy todir="${symbol_dollar}{workdir}">
      <fileset dir="${symbol_dollar}{basedir}/../">
        <exclude name=".git" />
        <exclude name=".gitignore" />
        <exclude name="distribution/archetype/" />
        <exclude name="LICENSE" />
        <exclude name="NOTICE" />
        <exclude name="README.md" />
        <exclude name="**/target/**" />
      </fileset>
    </copy>

  </target>



  <target name="02_create-from-archetype">

    <exec executable="${symbol_dollar}{mvn.cmd}" dir="${symbol_dollar}{workdir}" failonerror="true">
      <env key="JAVA_HOME" value="${symbol_dollar}{java.home}" />
      <arg value="-Darchetype.filteredExtentions=java,xml,txt,groovy,cs,mdo,aj,jsp,gsp,vm,html,xhtml,properties,.classpath,.project,launch,component" />
      <arg value="archetype:create-from-project" />
    </exec>

    
  </target>



  <target name="03_copy-archetype-resource">

    <delete dir="${symbol_dollar}{resdir}" />

    <property name="arcres" value="${symbol_dollar}{workdir}/target/generated-sources/archetype/src" />

    <copy todir="${symbol_dollar}{resdir}">
      <fileset dir="${symbol_dollar}{arcres}">
        <exclude name="generated-sources/archetype/target" />
      </fileset>
    </copy>

    <property name="settings" value="${symbol_dollar}{resdir}/main/resources/archetype-resources/.settings" />

    <move todir="${symbol_dollar}{settings}" includeemptydirs="false">
      <fileset dir="${symbol_dollar}{settings}" includes="*.launch" />
      <globmapper from="${symbol_dollar}{artifactId}*.launch" to="__artifactId__*.launch" />
    </move>

  </target>



  <target name="04_process-archetype">

    <exec executable="${symbol_dollar}{mvn.cmd}" dir="${symbol_dollar}{basedir}/archetype" failonerror="true">
      <env key="JAVA_HOME" value="${symbol_dollar}{java.home}" />
      <arg value="-DperformRelease=${symbol_dollar}{mvn.performRelease}" />
      <arg value="clean" />
      <arg value="${symbol_dollar}{mvn.phase}" />
    </exec>

  </target>


  <target name="05_acceptance-test">

    <delete dir="${symbol_dollar}{testdir}" />
    <mkdir dir="${symbol_dollar}{testdir}" />

    <exec executable="${symbol_dollar}{mvn.cmd}" dir="${symbol_dollar}{testdir}" failonerror="true">
      <env key="JAVA_HOME" value="${symbol_dollar}{java.home}" />
      <arg value="-DarchetypeGroupId=org.sitoolkit.ad.archetype" />
      <arg value="-DarchetypeArtifactId=${artifactId}" />
      <arg value="-DarchetypeVersion=0.1-SNAPSHOT" />
      <arg value="-DgroupId=a.b.c" />
      <arg value="-DartifactId=${symbol_dollar}{testArtifactId}" />
      <arg value="-Darchetype.interactive=false" />
      <arg value="-DarchetypeCatalog=local" />
      <arg value="-B" />
      <arg value="archetype:generate" />
    </exec>

    <exec executable="${symbol_dollar}{mvn.cmd}" dir="${symbol_dollar}{testdir}/${symbol_dollar}{testArtifactId}" failonerror="true">
      <env key="JAVA_HOME" value="${symbol_dollar}{java.home}" />
      <arg value="-Pdb-migrate,embedded-glassfish,it"/>
      <arg value="-Dmaven.test.skip=false"/>
      <arg value="-Devidence.open=false" />
      <arg value="-Das.port=8090"/>
      <arg value="-Dfile.encoding=UTF-8"/>
      <arg value="verify"/>
    </exec>
    
    <exec executable="${symbol_dollar}{mvn.cmd}" dir="${symbol_dollar}{testdir}/${symbol_dollar}{testArtifactId}" failonerror="true">
      <env key="JAVA_HOME" value="${symbol_dollar}{java.home}" />
      <arg value="-Pdb-migrate,was-liberty,it"/>
      <arg value="-Dmaven.test.skip=false"/>
      <arg value="-Devidence.open=false" />
      <arg value="-Das.port=8090"/>
      <arg value="-Dfile.encoding=UTF-8"/>
      <arg value="clean"/>
      <arg value="verify"/>
    </exec>

  </target>

</project>