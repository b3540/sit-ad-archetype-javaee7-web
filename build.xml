<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:if="ant:if"
         xmlns:unless="ant:unless"
         name="javaee7-web-distribution"
         basedir="."
         default="install">

  <input addproperty="artifactId"
         validargs="javaee7-web-min,javaee7-web-tips"
         defaultvalue="javaee7-web-min" />
  <property name="newVersion" value="0.12" />
  <property environment="env" />
  <property name="workdir" value="${basedir}/target" />
  <property name="archresdir"
            value="${artifactId}/target/generated-sources/archetype/src"
            description="「mvn archetye:create-from-project」コマンドで作成された、アーキタイプとして格納される資源のディレクトリ" />
  <property name="newarchdir" value="${workdir}/${artifactId}/newarch" description="新しいアーキタイプを作成するディレクトリ" />
  <property name="resdir" value="${newarchdir}/src" />
  <property name="db" value="derby" />

  <condition property="mvn.cmd" value="${env.MAVEN_HOME}/bin/mvn.cmd" else="/usr/local/bin/mvn">
    <os family="windows" />
  </condition>

  <condition property="glassfish">
    <equals arg1="${artifactId}" arg2="javaee7-web-min" />
  </condition>


  <target name="install">
    <property name="mvn.phase" value="install" />
    <property name="mvn.performRelease" value="false" />
    <antcall target="process-all" />
  </target>


  <target name="deploy">
    <property name="mvn.phase" value="deploy" />
    <property name="mvn.performRelease" value="true" />
    <antcall target="process-all" />
  </target>


  <target name="process-all">
    <antcall target="01_create-from-archetype" />
    <antcall target="02_copy-archetype-resource" />
    <antcall target="03_process-archetype" />
    <antcall target="04_acceptance-test" />
  </target>


  <target name="01_create-from-archetype">

    <exec executable="${mvn.cmd}" dir="${basedir}/${artifactId}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-Darchetype.filteredExtentions=java,xml,txt,groovy,cs,mdo,aj,jsp,gsp,vm,html,xhtml,properties,.classpath,.project,launch,component" />
      <arg value="clean" />
      <arg value="archetype:create-from-project" />
    </exec>

  </target>



  <target name="02_copy-archetype-resource">

    <copy todir="${resdir}">
      <fileset dir="${archresdir}">
        <exclude name=".git" />
        <exclude name=".gitignore" />
        <exclude name="/archetype/**" />
        <exclude name="generated-sources/archetype/target" />
        <exclude name="LICENSE" />
        <exclude name="NOTICE" />
        <exclude name="README.md" />
        <exclude name="**/target/**" />
      </fileset>
    </copy>

    <property name="settings" value="${resdir}/main/resources/archetype-resources/.settings" />

    <move todir="${settings}" includeemptydirs="false">
      <fileset dir="${settings}" includes="*.launch" />
      <globmapper from="${artifactId}*.launch" to="__artifactId__*.launch" />
    </move>

    <copy file="${basedir}/${artifactId}/distribution/pom.xml" todir="${newarchdir}" />

  </target>



  <target name="03_process-archetype">

    <exec executable="${mvn.cmd}" dir="${newarchdir}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-DnewVersion=${newVersion}" />
      <arg value="versions:set" />
    </exec>

    <condition property="mvn.phase" value="install">
      <not>
        <isset property="mvn.phase" />
      </not>
    </condition>

    <exec executable="${mvn.cmd}" dir="${newarchdir}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-DperformRelease=${mvn.performRelease}" />
      <arg value="${mvn.phase}" />
    </exec>

  </target>


  <target name="04_acceptance-test">

    <antcall target="test-site"/>
    <antcall target="test-glassfish"/>
    <antcall target="test-was-liberty"/>
    <antcall target="test-wildfly"/>

  </target>
  
  
  <target name="archetype-generate">
    
    <delete dir="${workdir}/${testArtifactId}"/>
    
    <exec executable="${mvn.cmd}" dir="${workdir}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-DarchetypeGroupId=org.sitoolkit.ad.archetype" />
      <arg value="-DarchetypeArtifactId=${artifactId}" />
      <arg value="-DarchetypeVersion=${newVersion}" />
      <arg value="-DgroupId=a.b.c" />
      <arg value="-DartifactId=${testArtifactId}" />
      <arg value="-Darchetype.interactive=false" />
      <arg value="-DarchetypeCatalog=local" />
      <arg value="-B" />
      <arg value="archetype:generate" />
    </exec>

  </target>

  
  <target name="test-site">

    <property name="testArtifactId" value="${artifactId}-test-site"/>
    <antcall target="archetype-generate"/>    

    <exec executable="${mvn.cmd}" dir="${workdir}/${testArtifactId}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-Dfile.encoding=UTF-8" />
      <arg value="-Ddb.port=1528" />
      <arg value="-P${db},db-migrate" />
      <arg value="site" />
    </exec>

  </target>


  <target name="test-glassfish">
  
    <property name="testArtifactId" value="${artifactId}-test-glassfish"/>
    <antcall target="archetype-generate"/>    
  
    <exec executable="${mvn.cmd}"
          dir="${workdir}/${testArtifactId}"
          failonerror="true"
          if:set="glassfish">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-P${db},db-migrate,embedded-glassfish,it" />
      <arg value="-Devidence.open=false" />
      <arg value="-Dfile.encoding=UTF-8" />
      <arg value="-Ddb.port=1528" />
      <arg value="-Das.port=8081" />
      <arg value="verify" />
    </exec>
    
  </target>
  
  
  <target name="test-was-liberty">
    
    <property name="testArtifactId" value="${artifactId}-test-was-liberty"/>
    <antcall target="archetype-generate"/>    

    <exec executable="${mvn.cmd}" dir="${workdir}/${testArtifactId}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-P${db},db-migrate,was-liberty,it" />
      <arg value="-Devidence.open=false" />
      <arg value="-Dfile.encoding=UTF-8" />
      <arg value="-Ddb.port=1529" />
      <arg value="-Das.port=8082" />
      <arg value="verify" />
    </exec>

  </target>

  
  <target name="test-wildfly">

    <property name="testArtifactId" value="${artifactId}-test-wildfly"/>
    <antcall target="archetype-generate"/>    

    <exec executable="${mvn.cmd}" dir="${workdir}/${testArtifactId}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <env key="JBOSS_HOME" value="${workdir}/${testArtifactId}/target/wildfly-run/wildfly-10.0.0.Final" />
      <arg value="-P${db},db-migrate,wildfly,it" />
      <arg value="-Dmaven.test.skip=false" />
      <arg value="-Devidence.open=false" />
      <arg value="-Dfile.encoding=UTF-8" />
      <arg value="-Ddb.port=1530" />
      <arg value="-Das.port=8083" />
      <arg value="verify" />
    </exec>
    
  </target>
  
  
  <target name="set-version">
    
    <exec executable="${mvn.cmd}" dir="${basedir}" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-DnewVersion=${newVersion}" />
      <arg value="versions:set" />
      <arg value="clean" />
      <arg value="install" />
    </exec>

    <exec executable="${mvn.cmd}" dir="${basedir}/javaee7-web-min" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-DallowSnapshots=true" />
      <arg value="versions:update-parent" />
    </exec>

    <exec executable="${mvn.cmd}" dir="${basedir}/javaee7-web-tips" failonerror="true">
      <env key="JAVA_HOME" value="${java.home}" />
      <arg value="-DallowSnapshots=true" />
      <arg value="versions:update-parent" />
    </exec>

  </target>
  
</project>